{"version":3,"sources":["index.js"],"names":["constraints","audio","video","width","height","navigator","mediaDevices","undefined","getUserMedia","webkitGetUserMedia","mozGetUserMedia","Promise","reject","Error","resolve","call","then","stream","document","querySelector","srcObject","onloadedmetadata","e","play","catch","err","console","log","name","message"],"mappings":"AACA,IAAIA,WAAW,GAAG;AACjBC,EAAAA,KAAK,EAAE,KADU;AAEjBC,EAAAA,KAAK,EAAG;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAFS,CAAlB,EAQA;;AACA,IAAIC,SAAS,CAACC,YAAV,KAA2BC,SAA/B,EAA0C;AACxCF,EAAAA,SAAS,CAACC,YAAV,GAAyB,EAAzB;AACD,EAED;AACA;AACA;;;AACA,IAAID,SAAS,CAACC,YAAV,CAAuBE,YAAvB,KAAwCD,SAA5C,EAAuD;AACrDF,EAAAA,SAAS,CAACC,YAAV,CAAuBE,YAAvB,GAAsC,UAASR,WAAT,EAAsB;AAE1D;AACA,QAAIQ,YAAY,GAAGH,SAAS,CAACI,kBAAV,IAAgCJ,SAAS,CAACK,eAA7D,CAH0D,CAK1D;AACA;;AACA,QAAI,CAACF,YAAL,EAAmB;AACjB,aAAOG,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,iDAAV,CAAf,CAAP;AACD,KATyD,CAW1D;;;AACA,WAAO,IAAIF,OAAJ,CAAY,UAASG,OAAT,EAAkBF,MAAlB,EAA0B;AAC3CJ,MAAAA,YAAY,CAACO,IAAb,CAAkBV,SAAlB,EAA6BL,WAA7B,EAA0Cc,OAA1C,EAAmDF,MAAnD;AACD,KAFM,CAAP;AAGD,GAfD;AAgBD;;AAEDP,SAAS,CAACC,YAAV,CAAuBE,YAAvB,CAAoCR,WAApC,EACCgB,IADD,CACM,UAASC,MAAT,EAAgB;AAErB;AACA,MAAIf,KAAK,GAAGgB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACAjB,EAAAA,KAAK,CAACkB,SAAN,GAAkBH,MAAlB;;AACAf,EAAAA,KAAK,CAACmB,gBAAN,GAAyB,UAASC,CAAT,EAAY;AACpCpB,IAAAA,KAAK,CAACqB,IAAN;AACA,GAFD;AAKA,CAXD,EAYCC,KAZD,CAYO,UAASC,GAAT,EAAa;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,GAAW,IAAX,GAAkBH,GAAG,CAACI,OAAlC;AACA,CAdD;AAgBAH,OAAO,CAACC,GAAR,CAAY,MAAZ","file":"src.e31bb0bc.js","sourceRoot":"..","sourcesContent":["\nvar constraints = {\n\taudio: false,\n\tvideo : {\n\t\twidth: 160,\n\t\theight: 120\n\t}\n};\n\n// Older browsers might not implement mediaDevices at all, so we set an empty object first\nif (navigator.mediaDevices === undefined) {\n  navigator.mediaDevices = {};\n}\n\n// Some browsers partially implement mediaDevices. We can't just assign an object\n// with getUserMedia as it would overwrite existing properties.\n// Here, we will just add the getUserMedia property if it's missing.\nif (navigator.mediaDevices.getUserMedia === undefined) {\n  navigator.mediaDevices.getUserMedia = function(constraints) {\n\n    // First get ahold of the legacy getUserMedia, if present\n    var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n    // Some browsers just don't implement it - return a rejected promise with an error\n    // to keep a consistent interface\n    if (!getUserMedia) {\n      return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n    }\n\n    // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n    return new Promise(function(resolve, reject) {\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  }\n}\n\nnavigator.mediaDevices.getUserMedia(constraints)\n.then(function(stream){\n\n\t/* use the stream */\n\tvar video = document.querySelector('video');\n\tvideo.srcObject = stream;\n\tvideo.onloadedmetadata = function(e) {\n\t\tvideo.play();\n\t};\n\n\n})\n.catch(function(err){\n\tconsole.log(err.name + \": \" + err.message);\n});\n\nconsole.log(\"done\");"]}